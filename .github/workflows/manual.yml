name: Manual

on:
  workflow_dispatch:
    inputs:
      downloadDb:
        description: "Download DB"
        required: true
        default: false
        type: boolean


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: gradle

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update DB
        run: |
          MALWARE_DATABASE_VERSION=$(curl -s --connect-timeout 30 --retry 5 --retry-delay 1 https://data-cdn.mbamupdates.com/v3/database/android/version.chk)
          echo "Latest malware db version: $MALWARE_DATABASE_VERSION"
          PHISHING_DATABASE_VERSION=$(curl -s --connect-timeout 30 --retry 5 --retry-delay 1 https://data-cdn.mbamupdates.com/v1/database/domains-phishing/version.chk)
          echo "Latest phishing db version: $PHISHING_DATABASE_VERSION"
          curl --output signatures.ref --connect-timeout 30 --retry 5 --retry-delay 1 https://data-cdn.mbamupdates.com/v3/database/android/data/{$MALWARE_DATABASE_VERSION}.ref
          curl --output domain.ref --connect-timeout 30 --retry 5 --retry-delay 1 https://data-cdn.mbamupdates.com/v1/database/domains-phishing/data/domains-phishing.${PHISHING_DATABASE_VERSION}.ref

      - name: Check for modified files
        id: git-check
#        run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)
        run echo "{modified}={$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)}" >> $GITHUB_OUTPUT

      - name: Commit DB
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'andrei'
          git config --global user.email 'aprokofjev@malwarebytes.com'
        
          git status
          git commit -am "Update db"
          git push
           
          
