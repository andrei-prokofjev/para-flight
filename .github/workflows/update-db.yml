name: Update DB
on:
  push:
    branches: [ "master" ]
#on:
#  schedule:
#    - cron: "0 0 * * 1"
#  workflow_call:
#    inputs:
#      publish:
#        required: true
#        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ASSETS_PATH: "app/"
      DB_UPDATE_BASE_URL: "https://data-cdn.mbamupdates.com/"

    steps:
      - name: Setup env
        run: |
          echo "MALWARE_DATABASE_VERSION=$(curl -s --connect-timeout 30 --retry 5 --retry-delay 1 ${DB_UPDATE_BASE_URL}v3/database/android/version.chk)" >> $GITHUB_ENV
          echo "PHISHING_DATABASE_VERSION=$(curl -s --connect-timeout 30 --retry 5 --retry-delay 1 ${DB_UPDATE_BASE_URL}v1/database/domains-phishing/version.chk)" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Fetch latest DB
        run: |
          echo "Latest malware db version: ${MALWARE_DATABASE_VERSION}"          
          echo "Latest phishing db version: ${PHISHING_DATABASE_VERSION}"
          curl --output ${ASSETS_PATH}signatures.ref --connect-timeout 30 --retry 5 --retry-delay 1 ${DB_UPDATE_BASE_URL}v3/database/android/data/android.$MALWARE_DATABASE_VERSION.ref
          curl --output ${ASSETS_PATH}domain.ref --connect-timeout 30 --retry 5 --retry-delay 1 ${DB_UPDATE_BASE_URL}v1/database/domains-phishing/data/domains-phishing.$PHISHING_DATABASE_VERSION.ref

      - name: Check for modified DB
        id: check-db
        run: |
          echo "modified=$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)" >> $GITHUB_OUTPUT

      - name: Create pull request
        if: steps.check-db.outputs.modified == 'true'
        run: gh pr create -B master -H branch_to_merge --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}





